name: Nightly Build

on:
  schedule:
  - cron: "20 23 * * *"
  repository_dispatch:

jobs:
  build:
    name: "Nightly Build"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Install NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.x'

    - name: Set Up Variables
      run: echo "action_url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

    - name: Restore Nuget Packages
      run: dotnet restore MessagingService.sln --source https://api.nuget.org/v3/index.json --source https://www.myget.org/F/transactionprocessing/api/v3/index.json

    - name: Build Code
      run: dotnet build MessagingService.sln --configuration Release
    
    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test --filter FullyQualifiedName!~IntegrationTests
        env:
            CollectCoverage: true
            CoverletOutputFormat: lcov
            CoverletOutput: ${{ github.workspace }}/lcov.info
            ExcludeByAttribute: "Obsolete,GeneratedCodeAttribute,CompilerGeneratedAttribute,ExcludeFromCodeCoverageAttribute"

    - name: Setup Node.js for use with actions
      uses: actions/setup-node@v1.4.4

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3  
      with:
        files: ./lcov.info

    - name: Build Docker Image
      run: docker build . --file MessagingService/Dockerfile --tag messagingservice:latest
        
    - name: Run Integration Tests
      run: dotnet test "MessagingService.IntegrationTests\MessagingService.IntegrationTests.csproj"

    - uses: dacbd/create-issue-action@main
      if: ${{ failure() }}
      name: Create an issue on build failure
      with:
        title: Investigate Nightly Build Failure
        token: ${{secrets.GITHUB_TOKEN}}
        labels: nightlybuild
        body: Url is ${{env.action_url}}
